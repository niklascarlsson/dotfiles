#+TITLE: dotfiles
* xorg
** xinitrc
*** HIDPI screen support
I found an example configuration for the retina display at
https://ellipticaldoor.com/2017-10-11-installing-arch-linux-on-a-macbook-with-retina-hidpi-support-and-graphic-switching/
Currently I have commented out the gdk and qt settings until I read up on what
they actually does. The xrandr command however I needed because by default the
output of the ~xrandr -q~ said the dpi was 96 which was clearly incorrect. I
verified that the 227 was correct by consulting the apple website for the
macbook specs.

#+NAME: xinit-hidpi
#+BEGIN_SRC sh
#export GDK_SCALE=2
#export GDK_DPI_SCALE=0.95
#export QT_SCREEN_SCALE_FACTORS=0.9
#export QT_AUTO_SCREEN_SCALE_FACTOR=2
#export QT_SCALE_FACTOR=2

xrandr --dpi 227
#+END_SRC

*** Launch programs
I need to launch sxhkd since bspwm is relying upon that program to handle the
keybindings. I launch the terminal as well at startup. It can be convinent at
times when I hadn't installed rofi. Can probably be removed now.
#+NAME: xinit-programs
#+BEGIN_SRC sh
sxhkd &
urxvt &
compton &
exec bspwm
#+END_SRC

*** Automatically hide mouse
I want to be able to hide my mouse cursor automatically after a while of non-usage
#+NAME: xinit-mouse
#+BEGIN_SRC sh
unclutter &
#+END_SRC

*** The configuration file
#+BEGIN_SRC text :tangle ~/.xinitrc :noweb yes
#! /bin/sh

# customize xresources
[[ -f ~/.Xresources ]] && xrdb  ~/.Xresources

# hidpi settings
<<xinit-hidpi>>

# mouse and keyboard settings
<<xinit-mouse>>

# start programs
<<xinit-programs>>
#+END_SRC

** xresources
*** HIDPI
The configuration of hidpi parameters originate from
https://ellipticaldoor.com/2017-10-11-installing-arch-linux-on-a-macbook-with-retina-hidpi-support-and-graphic-switching/
#+NAME: xresources-hidpi
#+BEGIN_SRC sh
!! hidpi
Xft.dpi: 227
Xft.rgba: rgb
Xft.antialias: true
Xft.hinting: false
Xft.lcdfilter: lcddefault
#+END_SRC

*** Colors
The colors originate from ~hlissners~ dotfiles setup. Another source for color
schemes might be https://terminal.sexy/.
#+NAME: xresources-colors
#+BEGIN_SRC sh
!! Colors
#define blk  #141517
#define bblk #969896
#define red  #cc6666
#define bred #de935f
#define grn  #b5bd68
#define bgrn #757d28
#define ylw  #f0c674
#define bylw #f9a03f
#define blu  #81a2be
#define bblu #2a8fed
#define mag  #b294bb
#define bmag #bc77a8
#define cyn  #8abeb7
#define bcyn #a3685a
#define wht  #c5c8c6
#define bwht #ffffff
#define bg blk
#define fg wht

,*.foreground:  fg
,*.background:  bg
,*.cursorColor: mag

,*.color0:  blk
,*.color8:  bblk
,*.color1:  red
,*.color9:  bred
,*.color2:  grn
,*.color10: bgrn
,*.color3:  ylw
,*.color11: bylw
,*.color4:  blu
,*.color12: bblu
,*.color5:  mag
,*.color13: bmag
,*.color6:  cyn
,*.color14: bcyn
,*.color7:  wht
,*.color15: bwht

! greys
,*.color234: #1d2021
,*.color235: #282828
,*.color236: #32302f
,*.color237: #3c3836
,*.color239: #504945
,*.color240: #544c49
,*.color241: #665c54

!! cursor
Xcursor.theme: default
Xcursor.size: 32
#+END_SRC

*** urxvt
The configuration of urxvt originates from ~hlissners~ setup as well.
#+NAME: xresources-urxvt
#+BEGIN_SRC sh
!! urxvt
URxvt*.background:             [96]blk
URxvt*.termName:               xterm-256color
URxvt*.geometry:               81x20
URxvt*.buffered:               true
URxvt*.cursorBlink:            true
URxvt*.underlineColor:         grey
URxvt*.depth:                  32
URxvt*.borderless:             1
URxvt.iso14755:                false
URxvt.iso14755_52:             false
URxvt*.internalBorder:         14
URxvt*.scrollBar:              false
URxvt*.saveLines:              5000
URxvt*.loginShell:             false
URxvt*.matcher.button:         1
URxvt*.matcher.rend.0:         Uline Bold fg5
URxvt*.url-launcher:           firefox

URxvt*.lineSpace:              0
URxvt*.letterSpace:            0
URxvt.font: xft:Iosevka Term:style=regular:size=8
URxvt.boldFont: xft:Iosevka Term:style=bold:size=8
#+END_SRC

*** The configuration file
#+BEGIN_SRC text :tangle ~/.Xresources :noweb yes
<<xresources-hidpi>>

<<xresources-colors>>

<<xresources-urxvt>>
#+END_SRC
* bspwm
** profile

In the configuration section in the arch wiki one can read that:
https://wiki.archlinux.org/index.php/bspwm
#+BEGIN_EXAMPLE
Important: Make sure your environment variable $XDG_CONFIG_HOME is set or your
bspwmrc will not be found
#+END_EXAMPLE

It's therefore important to set this environmental variable.
#+BEGIN_SRC sh :tangle ~/.profile :noweb yes
XDG_CONFIG_HOME="$HOME/.config"
export XDG_CONFIG_HOME
#+END_SRC
** sxkhkdrc

I followed the instructions from the manual and copied over the example
configuration from ~/usr/share/doc/bspwm/examples/sxhkdrc/~. The only thing that
I have changed is to call ~rofi~ instead of ~dmenu~.

#+BEGIN_SRC sh :tangle ~/.config/sxhkd/sxhkdrc :mkdirp yes :noweb yes
#
# wm independent hotkeys
#

# terminal emulator
super + Return
	urxvt

# program launcher
super + @space
	rofi -show run

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

#
# bspwm hotkeys
#

# quit bspwm normally
super + alt + Escape
	bspc quit

# close and kill
super + {_,shift + }w
	bspc node -{c,k}

# alternate between the tiled and monocle layout
super + m
	bspc desktop -l next

# send the newest marked node to the newest preselected node
super + y
	bspc node newest.marked.local -n newest.!automatic.local

# swap the current node and the biggest node
super + g
	bspc node -s biggest

#
# state/flags
#

# set the window state
super + {t,shift + t,s,f}
	bspc node -t {tiled,pseudo_tiled,floating,fullscreen}

# set the node flags
super + ctrl + {m,x,y,z}
	bspc node -g {marked,locked,sticky,private}

#
# focus/swap
#

# focus the node in the given direction
super + {_,shift + }{h,j,k,l}
	bspc node -{f,s} {west,south,north,east}

# focus the node for the given path jump
super + {p,b,comma,period}
	bspc node -f @{parent,brother,first,second}

# focus the next/previous node in the current desktop
super + {_,shift + }c
	bspc node -f {next,prev}.local

# focus the next/previous desktop in the current monitor
super + bracket{left,right}
	bspc desktop -f {prev,next}.local

# focus the last node/desktop
super + {grave,Tab}
	bspc {node,desktop} -f last

# focus the older or newer node in the focus history
super + {o,i}
	bspc wm -h off; \
	bspc node {older,newer} -f; \
	bspc wm -h on

# focus or send to the given desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,node -d} '^{1-9,10}'

#
# preselect
#

# preselect the direction
super + ctrl + {h,j,k,l}
	bspc node -p {west,south,north,east}

# preselect the ratio
super + ctrl + {1-9}
	bspc node -o 0.{1-9}

# cancel the preselection for the focused node
super + ctrl + space
	bspc node -p cancel

# cancel the preselection for the focused desktop
super + ctrl + shift + space
	bspc query -N -d | xargs -I id -n 1 bspc node id -p cancel

#
# move/resize
#

# expand a window by moving one of its side outward
super + alt + {h,j,k,l}
	bspc node -z {left -20 0,bottom 0 20,top 0 -20,right 20 0}

# contract a window by moving one of its side inward
super + alt + shift + {h,j,k,l}
	bspc node -z {right -20 0,top 0 20,bottom 0 -20,left 20 0}

# move a floating window
super + {Left,Down,Up,Right}
	bspc node -v {-20 0,0 20,0 -20,20 0}
#+END_SRC

** bspwmrc

With ~bspwmrc~ it's important that the file is executable. With tangle there are
two different ways of making a tangled file executable
https://orgmode.org/manual/tangle_002dmode.html. I will be using the ~shebang~
argument which will org will make sure to add the shebang and make the file
executable.

#+NAME: bspwm-monitor
#+BEGIN_SRC sh
bspc monitor -d I II III IV V VI VII VIII IX X
#+END_SRC

#+NAME: bspwm-multiple-monitors
#+BEGIN_SRC sh
# bspc monitor DP-1 I II III IV V
# bspc monitor eDP-1 VI VII VIII IX X
bspc monitor 0x00600002 -d I II III IV V
bspc monitor 0x00600004 -d VI VII VIII IX X
#+END_SRC

#+NAME: bspwm-emacs
#+BEGIN_SRC sh
bspc rule -a Emacs split_ratio=0.5 border=off state=fullscreen
#+END_SRC

I found this post about how to configure feh when using bspwm,
http://profectium.blogspot.com/2016/07/how-to-change-your-desktop-background.html.
I tried to use xinitrc first to set the background but that approach seemed to
have implications when running dual screens.
#+NAME: bspwm-feh
#+BEGIN_SRC sh
feh --bg-scale ~/wallpapers/ghostinshell.jpg
#+END_SRC

It was recomended in the polybar wiki,
https://github.com/jaagr/polybar/wiki, to add a launch file which could be
called from the ~bspwmrc~.
#+NAME: bspwm-polybar
#+BEGIN_SRC sh
$HOME/.config/polybar/launch.sh
#+END_SRC

#+BEGIN_SRC sh :tangle ~/.config/bspwm/bspwmrc :shebang "#! /bin/sh" :mkdirp yes :noweb yes
sxhkd &

# <<bspwm-monitor>>
<<bspwm-multiple-monitors>>

bspc config border_width         2
bspc config window_gap          12

bspc config split_ratio          0.52
bspc config borderless_monocle   true
bspc config gapless_monocle      true

bspc rule -a Gimp desktop='^8' state=floating follow=on
bspc rule -a Chromium desktop='^2'
bspc rule -a mplayer2 state=floating
bspc rule -a Kupfer.py focus=on
bspc rule -a Screenkey manage=off

# Special apps
<<bspwm-emacs>>

# feh
<<bspwm-feh>>

# polybar
<<bspwm-polybar>>
#+END_SRC
* compton

I have used the example configuration to start with.

** Opacity rules
I have here the example opacity rule from the arch wiki,
https://wiki.archlinux.org/index.php/compton.
#+NAME: compton-urxvt
#+BEGIN_SRC sh
opacity-rule = [
  "90:class_g = 'URxvt' && focused",
  "60:class_g = 'URxvt' && !focused"
];
#+END_SRC

** Shadows
I disabled the shadows. I need to understand better how these shadows work
before I use them.
#+NAME: compton-shadow
#+BEGIN_SRC sh
shadow = false;
shadow-radius = 7;
shadow-offset-x = -7;
shadow-offset-y = -7;
log-level = "warn";
# log-file = "/path/to/your/log/file";
# shadow-opacity = 0.7;
# shadow-red = 0.0;
# shadow-green = 0.0;
# shadow-blue = 0.0;
shadow-exclude = [
	"name = 'Notification'",
	"class_g = 'Conky'",
	"class_g ?= 'Notify-osd'",
	"class_g = 'Cairo-clock'",
	"_GTK_FRAME_EXTENTS@:c"
];
# shadow-exclude = "n:e:Notification";
# shadow-exclude-reg = "x10+0+0";
# xinerama-shadow-crop = true;
#+END_SRC

** The configuration
It seems like compton gives emacs some kind of dark frame on the right side,
which dissapears if I go to monocle view and back. Need to investigate that.

#+BEGIN_SRC sh :tangle ~/.config/compton.conf :mkdirp yes :noweb yes
# Shadow
<<compton-shadow>>

# Opacity
inactive-opacity = 0.8;
# active-opacity = 0.8;
frame-opacity = 0.7;
inactive-opacity-override = false;
# inactive-dim = 0.2;
# inactive-dim-fixed = true;
# blur-background = true;
# blur-background-frame = true;
blur-kern = "3x3box";
# blur-kern = "5,5,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1";
# blur-background-fixed = true;
blur-background-exclude = [
	"window_type = 'dock'",
	"window_type = 'desktop'",
	"_GTK_FRAME_EXTENTS@:c"
];
# opacity-rule = [ "80:class_g = 'URxvt'" ];
<<compton-urxvt>>

# Fading
fading = true;
# fade-delta = 30;
fade-in-step = 0.03;
fade-out-step = 0.03;
# no-fading-openclose = true;
# no-fading-destroyed-argb = true;
fade-exclude = [ ];

# Other
backend = "xrender";
mark-wmwin-focused = true;
mark-ovredir-focused = true;
# use-ewmh-active-win = true;
detect-rounded-corners = true;
detect-client-opacity = true;
refresh-rate = 0;
vsync = "none";
# sw-opti = true;
# unredir-if-possible = true;
# unredir-if-possible-delay = 5000;
# unredir-if-possible-exclude = [ ];
focus-exclude = [ "class_g = 'Cairo-clock'" ];
detect-transient = true;
detect-client-leader = true;
invert-color-include = [ ];
# resize-damage = 1;

# GLX backend
# glx-no-stencil = true;
# glx-no-rebind-pixmap = true;
glx-swap-method = "undefined";
# glx-use-gpushader4 = true;
# xrender-sync = true;
# xrender-sync-fence = true;

# Window type settings
wintypes:
{
  tooltip = { fade = true; shadow = true; opacity = 0.75; focus = true; full-shadow = false; };
  dock = { shadow = false; }
  dnd = { shadow = false; }
  popup_menu = { opacity = 0.8; }
  dropdown_menu = { opacity = 0.8; }
};
#+END_SRC
* firefox
** Find the profile directory
Figure out the path to the firefox customization directory
https://medium.com/@Aenon/firefox-hide-native-tabs-and-titlebar-f0b00bdbb88b

#+BEGIN_SRC elisp
(defun my/firefox-profile-directory ()
  (let ((profile-directory '())
        (firefox-path (expand-file-name "~/.mozilla/firefox/")))
    (with-temp-buffer (shell-command (concat "ls " firefox-path) t)
                      (goto-char (point-min))
                      (while (not (eobp))
                          (let ((content (string-trim (thing-at-point 'line))))
                            (if (string-match "default" content)
                                (setq profile-directory (concat firefox-path content))))
                          (forward-line 1)))
    profile-directory))
#+END_SRC

#+RESULTS:
: my/firefox-profile-directory

#+BEGIN_SRC elisp
(concat (my/firefox-profile-directory) "/chrome/userChrome.css")
#+END_SRC

#+RESULTS:
: /home/niklascarlsson/.mozilla/firefox/eeakdoa8.default/chrome/userChrome.css

** The configuration

#+BEGIN_SRC sh :tangle (concat (my/firefox-profile-directory) "/chrome/userChrome.css") :mkdirp yes :noweb yes
/*
 * Do not remove the @namespace line -- it's required for correct functioning
 */
@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"); /* set default namespace to XUL */

/*
 * Hide tab bar, navigation bar and scrollbars
 * !important may be added to force override, but not necessary
 */
#TabsToolbar {visibility: collapse;}
#navigator-toolbox {visibility: collapse;}
#content browser {margin-right: -14px; margin-bottom: -14px;}
#+END_SRC
* shells
** bash
*** default
This is the default content that where in the rc file at start
#+NAME: bashrc-default
#+BEGIN_SRC sh
#
# ~/.bashrc
#

# If not running interactively, don't do anything
[[ $- != *i* ]] && return

alias ls='ls --color=auto'
PS1='[\u@\h \W]\$ '
#+END_SRC

*** external harddrive
Mount external
#+NAME: bashrc-mount-ssd
#+BEGIN_SRC sh
# mount ssd
alias mountssd='sudo ldm -d -u niklascarlsson'
#+END_SRC

*** The configuration file
Create the file
#+BEGIN_SRC sh :tangle ~/.bashrc :mkdirp yes :noweb yes
<<bashrc-default>>

<<bashrc-mount-ssd>>
#+END_SRC
** zsh
